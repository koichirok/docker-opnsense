#!/command/execlineb -P

s6-envdir ../opnsense/env

multisubstitute {
    importas opnsense_lan_address LAN_IPV4_ADDRESS
    importas opnsense_lan_netmask LAN_IPV4_NETMASK
}

# Set the address of the container's bridge interface
# use first available address in the subnet
backtick -E myaddr {
    perl -MNet::Netmask -e "
        @addrs = Net::Netmask->safe_new(join '/', @ARGV)->enumerate();
        # reject opnsense_lan_address, network and broadcast addresses
        @available = grep !/\\Q\$ARGV[0]\\E/, @addrs[1..$#addrs-1];
        print $available[0];"
        $opnsense_lan_address
        $opnsense_lan_netmask
}
if { ip addr add ${myaddr}/${opnsense_lan_netmask} dev br-opnsense-lan }
if { ip link set br-opnsense-lan up }
if { ip link set tap0 up }
# Allow to connect to OPNsense from container host
if {
    iptables
        -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j DNAT
        --to-destination ${opnsense_lan_address}:443
}
iptables -t nat -A POSTROUTING -o br-opnsense-lan -j MASQUERADE
