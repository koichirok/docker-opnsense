#!/usr/bin/expect -f

set serial [lindex $argv 0]
set mirror [lindex $argv 1]
set release $env(OPNSENSE_VERSION)
set root_prompt "root@OPNsense:~ # "

proc wait_prompt_and_exec {command} {
    global root_prompt
    expect $root_prompt
    send "$command\r"
}

spawn picocom $serial
set timeout 10

expect -re "Terminal ready"
send "\r"
set timeout 300
puts "##### INFO: Waiting for login prompt for 300 seconds"
expect "login: "
set timeout
send "root\r"
expect "Password:"
send "opnsense\r"
expect "Enter an option: "
send "8\r"

wait_prompt_and_exec "mkdir -p /var/cache/opnsense-update"
wait_prompt_and_exec "mount -t tmpfs tmpfs /var/cache/opnsense-update"
if {[string length $mirror] > 0} {
    # remove trailing slash and escape other slashes
    set mirror [string map {/ \\/} [string trimright $mirror "/"]]
    wait_prompt_and_exec "opnsense-update -Mm '$mirror'"
}
set retry false
wait_prompt_and_exec "opnsense-update -bkp"
set timeout -1
expect {
    -re "pkg-static:.*" { set retry true; exp_continue }
    $root_prompt
}
if { $retry } {
    send "opnsense-update -Md\r"
    wait_prompt_and_exec "opnsense-update -bkp"
}
wait_prompt_and_exec "opnsense-version -v"
set timeout 10
wait_prompt_and_exec "shutdown -p now"

# send Ctrl+a, Ctrl+x to exit picocom
send "\x01\x18"
expect eof
